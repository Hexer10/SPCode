name: Publish Beta Release

on:
  push:
    branches:
      - development

jobs:
  
  # Build and release
  build:

    runs-on: windows-latest
    steps:
    
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      # Fetch latest tag and rev number
      - name: Get tag and rev number
        id: get-tag-rev
        run: |
          echo "::set-output name=TAG::$(git describe --match "[0-9].[0-9].[0-9].[0-9]" --tags --abbrev=0)"
          echo "::set-output name=REV::$(git rev-list HEAD --count)"
      
      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100

      # Nuget
      - name: Restore NuGet packages 
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.x'
      - run: nuget restore Spcode.sln

      # Setup MSBuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1

      # Build SPCode
      - name: Build SPCode
        run: msbuild Spcode.csproj /p:Configuration=Release-Beta /p:langversion=latest

      # Build Installer
      - name: Build Installer (NSIS)
        uses: joncloud/makensis-action@v1
        with:
          script-file: .\bin\Release-Beta\SPCode.nsi
        
      # Compress Beta Portable Version
      - name: Compress Portable Version
        run: .\bin\Release-Beta\Compress.ps1
        shell: powershell

      # Build Updater
      # - name: Build Updater
      #  run: msbuild Deploy\SPCodeUpdater\SPCodeUpdater.csproj /p:Configuration=Release /property:langversion=latest

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-tag-rev.outputs.TAG }}.beta${{ steps.get-tag-rev.outputs.REV }}
          release_name: Release ${{ steps.get-tag-rev.outputs.TAG }}.beta${{ steps.get-tag-rev.outputs.REV }}
          draft: false
          prerelease: true


      - name: Upload Installer
        id: upload-installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: .\bin\Release-Beta\SPCode.Beta.Installer.exe
          asset_name: SPCode.Beta.Installer.exe
          asset_content_type: application/octet-stream

      - name: Upload Portable
        id: upload-portable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\bin\Release-Beta\SPCode.Beta.Portable.zip
          asset_name: SPCode.Beta.Portable.zip
          asset_content_type: application/zip

      #- name: Upload Updater
      #  id: upload-updater
       # uses: actions/upload-release-asset@v1
        #env:
         # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     #   with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }}
       #   asset_path: .\Deploy\SpcodeUpdater\bin\Release\SPCodeUpdater.exe
        #  asset_name: SPCodeUpdater.exe
         # asset_content_type: application/octet-stream
