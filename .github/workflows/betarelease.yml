name: Publish Beta Release

on:
  push:
    branches:
      - development

jobs:

  # Get the latest tag
  get-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.previoustag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
  
  get-revision:
    runs-on: ubuntu-latest
    outputs:
      rev: ${{ steps.getrev.outputs.rev }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Get revision
      id: getrev
      run: | 
        echo "::set-output name=rev::$(git rev-list HEAD --count)"

  build:

    runs-on: windows-latest
    needs: [ get-tag, get-revision ]
    steps:
    
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.100

      # Nuget
      - name: Restore NuGet packages 
        uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.x'
      - run: nuget restore Spcode.sln

      # Setup MSBuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1

      # Build SPCode
      - name: Build SPCode
        run: msbuild Spcode.csproj /p:Configuration=Release-Beta /p:langversion=latest

      # Build Installer
      - name: Build Installer (NSIS)
        uses: joncloud/makensis-action@v1
        with:
          script-file: .\bin\Release-Beta\SPCode.nsi
        
      # Compress Beta Portable Version
      - name: Compress Portable Version
        run: .\bin\Release-Beta\Compress.ps1
        shell: powershell

      # Build Updater
      # - name: Build Updater
      #  run: msbuild Deploy\SPCodeUpdater\SPCodeUpdater.csproj /p:Configuration=Release /property:langversion=latest

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{ needs.get-tag.outputs.tag }}.beta${{ needs.get-revision.outputs.rev }}
          draft: false
          prerelease: true


      - name: Upload Installer
        id: upload-installer
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: .\bin\Release-Beta\SPCode.Beta.Installer.exe
          asset_name: SPCode.Beta.Installer.exe
          asset_content_type: application/octet-stream

      - name: Upload Portable
        id: upload-portable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\bin\Release-Beta\SPCode.Beta.Portable.zip
          asset_name: SPCode.Beta.Portable.zip
          asset_content_type: application/zip

      #- name: Upload Updater
      #  id: upload-updater
       # uses: actions/upload-release-asset@v1
        #env:
         # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     #   with:
      #    upload_url: ${{ steps.create_release.outputs.upload_url }}
       #   asset_path: .\Deploy\SpcodeUpdater\bin\Release\SPCodeUpdater.exe
        #  asset_name: SPCodeUpdater.exe
         # asset_content_type: application/octet-stream
